#include <iostream>
int binary_search(int a[], int key, int low, int high) {
  if (low > high) {
    return -1;
  }
  int mid = low + ((high - low) / 2);

  if (a[mid] == key) {
    return mid;
  }
  if (key < a[mid]) {
    return binary_search(a, key, low, mid - 1);
  }
  return binary_search(a, key, mid + 1, high);
}

int main() {
  int* a = NULL;   // Pointer to int, initialize to nothing.
  int n;           // Size needed for array
  int key;
  std::cout << "Please enter the size of autogenerated array \n";
  std::cin >> n;        // Read in the size
  std::cout << "Please enter the key we want to find \n";
  std::cin >> key;
  a = new int[n];  // Allocate n ints and save ptr in a.
  for (int i=0; i<n; i++) {
    a[i] = i;    // Initialize all elements to zero.
    std::cout << a[i];
  }

  std::cout << "binary_search(a, " << a << ") = " << binary_search(a, key, 0, n) << std::endl;
  delete [] a;  // When done, free memory pointed to by a.
  a = NULL;     // Clear a to prevent using invalid memory reference.
  return 0;
}